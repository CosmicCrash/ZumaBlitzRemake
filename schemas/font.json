{
    "$schema": "http://json-schema.org/draft-07/schema",
    "type": "object",
    "description": "The root object.",
    "properties": {
        "type": {
            "enum": [
                "image",
                "truetype"
            ]
        }
    },
    "allOf": [
        {
            "properties": {
                "type": {
                    "description": "The font type."
                }
            }
        },
        {
            "if": {
                "properties": {
                    "type": {
                        "const": "image",
                        "description": "The font loads glyphs from an image file. All characters must be placed in a single row."
                    }
                },
                "required": [
                    "type"
                ]
            },
            "then": {
                "properties": {
                    "type": true,
                    "image": {
                        "$ref": "../_structures/Image.json",
                        "description": "The path to an Image which contains the characters."
                    },
                    "characters": {
                        "type": "object",
                        "description": "Contains all characters this Font consists of. Key names are single characters.",
                        "propertyNames": {
                            "pattern": "^.$"
                        },
                        "patternProperties": {
                            "^.*$": {
                                "type": "object",
                                "description": "A single character.",
                                "properties": {
                                    "offset": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "description": "The X offset of the image where the character starts, in pixels."
                                    },
                                    "width": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "description": "The width of the character, in pixels."
                                    }
                                },
                                "required": [
                                    "offset",
                                    "width"
                                ]
                            }
                        }
                    }
                },
                "required": [
                    "image",
                    "characters"
                ],
                "additionalProperties": false
            }
        },
        {
            "if": {
                "properties": {
                    "type": {
                        "const": "truetype",
                        "description": "The font loads glyphs from a TTF file."
                    }
                },
                "required": [
                    "type"
                ]
            },
            "then": {
                "properties": {
                    "type": true,
                    "path": {
                        "$ref": "../_structures/FontFile.json",
                        "description": "The path to a TTF font file which contains the characters."
                    },
                    "size": {
                        "type": "integer",
                        "exclusiveMaximum": 0,
                        "description": "The size of the Font, in pixels."
                    },
                    "color": {
                        "$ref": "../_structures/Color.json",
                        "description": "The color of this Font."
                    }
                },
                "required": [
                    "path",
                    "size",
                    "color"
                ],
                "additionalProperties": false
            }
        }
    ],
    "required": [
        "type"
    ]
}