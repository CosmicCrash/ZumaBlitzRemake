{
    "$schema": "http://json-schema.org/draft-07/schema",
    "type": "object",
    "description": "The root object.",
    "properties": {
        "$schema": true,
        "sprite": {
            "$ref": "../_structures/Sprite.json",
            "description": "A sprite to be drawn when the sphere is on the screen."
        },
        "colorblindSprite": {
            "type": "string",
            "description": "An alternative sprite to be drawn when Colorblind Mode is enabled."
        },
        "shadowSprite": {
            "$ref": "../_structures/Sprite.json",
            "description": "A shadow sprite to be drawn along the sphere. Defaults to sprites/game/ball_shadow.json.",
            "markdownDescription": "A shadow sprite to be drawn along the sphere.\nDefaults to `sprites/game/ball_shadow.json`."
        },
        "spriteAnimationSpeed": {
            "type": "number",
            "minimum": 0,
            "description": "When defined, the sphere sprite will animate with that speed in frames per second. This disables rolling animation and rotation. When left out, the sphere will have their usual rolling animation and will keep rotating."
        },
        "spriteRollingSpeed": {
            "type": "number",
            "minimum": 0,
            "description": "When defined, the sphere sprite will roll with that speed in frames per pixel. Defaults to 1."
        },
        "idleParticle": {
            "$ref": "../_structures/Particle.json",
            "description": "A persistent particle packet used when the sphere is on the board."
        },
        "destroyParticle": {
            "$ref": "../_structures/Particle.json",
            "description": "A one-time particle packet used when the sphere is destroyed."
        },
        "destroyCollectible": {
            "$ref": "../_structures/CollectibleGenerator.json",
            "description": "A collectible generator used when the sphere is destroyed."
        },
        "destroySound": {
            "$ref": "../_structures/SoundEvent.json",
            "description": "A sound event to be played when a sphere of this type is destroyed. Note: This will be played for each single sphere removed from the board. You may want to check out match sound events instead. Warning! This works only for crushed scarabs for now."
        },
        "color": {
            "anyOf": [
                {
                    "$ref": "../_structures/Color.json"
                },
                {
                    "$ref": "../_structures/ColorPalette.json"
                }
            ],
            "description": "The color or color palette used by shooting retical."
        },
        "colorSpeed": {
            "type": "number",
            "exclusiveMinimum": 0,
            "description": "Must be present only if color is a color palette pointer. Defines how fast (in pixels per second) will the palette be animated.",
            "markdownDescription": "Must be present only if `color` is a color palette pointer. Defines how fast (in pixels per second) will the palette be animated."
        },
        "interchangeable": {
            "type": "boolean",
            "description": "Whether this sphere can be changed when in the first slot of the shooter."
        },
        "shootBehavior": {
            "$ref": "sphere_shoot_behavior.json",
            "description": "Defines how this Sphere should behave when released from the Shooter."
        },
        "shootEffects": {
            "type": "array",
            "description": "A list of collectible effects to be applied when this sphere is shot.",
            "items": {
                "$ref": "collectible_effect.json",
                "description": "A single collectible effect."
            }
        },
        "shootSpeed": {
            "type": "number",
            "exclusiveMinimum": 0,
            "description": "If specified, overrides the speed of this sphere when shot."
        },
        "shootSound": {
            "$ref": "../_structures/SoundEvent.json",
            "description": "A sound event launched when this sphere is shot."
        },
        "hitBehavior": {
            "$ref": "sphere_hit_behavior.json",
            "description": "Defines how this sphere should behave when it hits a sphere train."
        },
        "hitSound": {
            "$ref": "../_structures/SoundEvent.json",
            "description": "A sound event launched when this sphere hits a sphere train."
        },
        "hitSoundBad": {
            "$ref": "../_structures/SoundEvent.json",
            "description": "An optional sound event launched when this sphere hits a sphere train and doesn't match any neighboring spheres."
        },
        "type": {
            "type": "string",
            "description": "The sphere type.",
            "oneOf": [
                {
                    "const": "normal",
                    "description": "The sphere behaves like usual."
                },
                {
                    "const": "stone",
                    "description": "The sphere can be destroyed by a nearby match."
                }
            ]
        },
        "matches": {
            "type": "array",
            "description": "A list of sphere type IDs (integers) this sphere type matches with.",
            "items": {
                "type": "integer",
                "description": "A single sphere ID."
            }
        },
        "matchFont": {
            "$ref": "../_structures/Font.json",
            "description": "A font used to display a floating text when this sphere gives points."
        }
    },
    "required": [
        "sprite",
        "destroyParticle",
        "color",
        "interchangeable",
        "shootBehavior",
        "shootSound",
        "hitBehavior",
        "hitSound",
        "type",
        "matches",
        "matchFont"
    ],
    "additionalProperties": false
}